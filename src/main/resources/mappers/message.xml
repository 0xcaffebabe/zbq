<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="wang.ismy.zbq.dao.MessageMapper">

    <resultMap id="messageMap" type="wang.ismy.zbq.entity.Message">
        <id column="message_id" property="messageId"/>
        <result column="content" property="content"/>
        <result column="has_read" property="hasRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <association property="fromUser" javaType="wang.ismy.zbq.entity.User">
            <id column="from_user" property="userId"/>
        </association>
        <association property="toUser" javaType="wang.ismy.zbq.entity.User">
            <id column="to_user" property="userId"/>
        </association>
    </resultMap>
    <insert id="insert">
        INSERT INTO message (from_user, to_user, content, has_read, create_time, update_time)
        values (#{fromUser.userId}, #{toUser.userId}, #{content}, FALSE, NOW(), NOW())
    </insert>
    <update id="updateHasRead">
        UPDATE message
        SET has_read = TRUE WHERE from_user = #{friendId} AND to_user= #{userId}
    </update>

    <select id="selectMessageListBy2User" resultMap="messageMap">
        SELECT *
        FROM message
        WHERE
            (from_user = #{user1} AND to_user = #{user2})
            OR (from_user = #{user2} AND to_user = #{user1})
    </select>
    <select id="selectUnreadMessageByUserId" resultType="wang.ismy.zbq.dto.UnreadMessageDTO">
        SELECT
            message.from_user,
            COUNT(*) msg_count,
            (
                SELECT m.content
                FROM message m
                WHERE m.from_user = message.from_user AND m.to_user = #{userId}
                ORDER BY m.create_time DESC
                LIMIT 1
            )        newest_msg,
            message.create_time send_time
        FROM message
        WHERE message.to_user = #{userId} AND message.has_read = FALSE
        GROUP BY message.from_user
        ORDER BY message.create_time DESC
    </select>
    <select id="selectMessageListByUserId" resultType="wang.ismy.zbq.dto.MessageListDTO">
        SELECT
            message.from_user,
            message.to_user,
            (
                SELECT m.content
                FROM message m
                WHERE (m.to_user = #{userId} OR m.from_user = #{userId}) AND
                      (m.from_user = message.from_user AND m.to_user = message.to_user)
                ORDER BY m.create_time DESC
                LIMIT 1
            ) newest_msg
        FROM message
        WHERE (message.to_user = #{userId} OR message.from_user = #{userId})
        GROUP BY message.from_user, message.to_user
        ORDER BY create_time DESC
    </select>
</mapper>